#!/bin/sh
# perform CRUD operations in s3 interactively
# @params
# $operation_type: default to upload, determines what operation(upload/download/delete/bucket) to take
# $operation_cmd: default to cp, determine what cmd to use in s3 command(cp/mv/sync)
# $bucket: bucket name
# $target_bucket: target bucket name
# $s3_path: s3 bucket path, root would be bucket name, bucket/path
# $target_s3_path: when operation_type=bucket, the target s3 location for file transfer
# $local_path: local file or directory path for download or upload, need to be set by -P flag
# $recursive: determine if the -r flag is set for recursive operation
# $hidden: determine if the local file search should include hidden files
# $search_from_root: determine if the find/fd should search from root
# $expires_in: time to live the url generated by presign action

# import helper scripts
mydir="${0%/*}"
source "$mydir"/shsrc/confirm.sh
source "$mydir"/shsrc/search_file.sh
source "$mydir"/shsrc/s3/helper/get_bucket.sh
source "$mydir"/shsrc/s3/helper/get_bucket_path.sh
source "$mydir"/shsrc/s3/upload_file_s3.sh
source "$mydir"/shsrc/s3/delete_file_s3.sh
source "$mydir"/shsrc/s3/download_file_s3.sh
source "$mydir"/shsrc/s3/transfer_file_s3.sh
source "$mydir"/shsrc/s3/presign_url_s3.sh
source "$mydir"/shsrc/s3/usage.sh

# default operation_cmd
operation_cmd='cp'
operation_type=''
local_path=''
recursive='false'
hidden='false'
search_from_root='false'

# process the command to use
# shift to remove the command from the args
case "$1" in
  upload)
    operation_type='upload'
    shift;;
  download)
    operation_type='download'
    shift;;
  delete)
    operation_type='delete'
    shift;;
  bucket)
    operation_type='bucket'
    shift;;
  presign)
    operation_type='presign'
    shift;;
esac

while getopts ":p:hrmHP:Rst:" opt
do
  case "$opt" in
    p)
      # -p expect a path bucket/path
      if [[ -z "$s3_path" ]]; then
        s3_path="$OPTARG"
      elif [[ -z "$target_s3_path" ]]; then
        target_s3_path="$OPTARG"
      fi;;
    P)
      # specify a local file path
      local_path="$OPTARG";;
    r)
      # set recursive flag
      recursive='true';;
    R)
      # search local file/path from root
      search_from_root='true';;
    m)
      # mv instead of cp
      operation_cmd='mv';;
    H)
      hidden='true';;
    h)
      usage "$operation_type"
      exit 0;;
    s)
      operation_cmd='sync'
      recursive='true';;
    t)
      expires_in="$OPTARG"
      break;;
    *)
      echo "Invalid option: $OPTARG" >&2
      usage "$operation_type"
      exit 1;;
  esac
done

# if no operation_type detected, display message and echo the s3 path of the selected object
# don't show the recursive interface, even -r is set
[[ -z "$operation_type" ]] && recursive='false' && echo 'No operation type command detected, (upload|download|delete|bucket|presign)'

# remove the recursive flag for presign url operation, as we don't want to display folder in s3
if [[ "$operation_type" == 'presign' ]]; then
  recursive='false'
  # set to zero to inform the presign_url_s3 script to use the default timeout which is 3600s
  [[ -z "$expires_in" ]] && expires_in=0
fi

# get the bucket path before any operation
if [[ -z "$s3_path" ]]; then
  echo "Select a bucket"
  # get bucekt name
  bucket=$(get_bucket)
  [[ -z "$bucket" ]] && echo "No bucket selected" && exit 1
  [[ ! -z "$operation_type" ]] && echo "Select a path"
  # get subfolders in the bucket or root
  s3_path=$(get_bucket_path "$bucket" "$operation_type" "$recursive")
  [[ -z "$s3_path" ]] && echo "No option/path selected" && exit 1
fi

# process operation type and call different scripts
if [[ "$operation_type" == 'upload' ]]; then
  upload_file_s3 "$operation_cmd" "$s3_path" "$recursive" "$hidden" "$search_from_root" "$local_path"
elif [[ "$operation_type" == 'download' ]]; then
  download_file_s3 "$operation_cmd" "$s3_path" "$recursive" "$hidden" "$search_from_root" "$local_path"
elif [[ "$operation_type" == 'delete' ]]; then
  delete_file_s3  "$s3_path" "$recursive"
elif [[ "$operation_type" == 'bucket' ]]; then
  if [[ -z "$target_s3_path" ]]; then
    echo "Select a target bucket for file transfer between buckets"
    # select a second bucket
    target_bucket=$(get_bucket)
    [[ -z "$target_bucket" ]] && echo "Target bucket not selected" && exit 1
    echo "Select a path where the file should be $operation_cmd"
    # select second bucket path
    target_s3_path=$(get_bucket_path "$target_bucket" "$operation_type" 'true')
    [[ -z "$target_s3_path" ]] && echo "Target path not specified" && exit 1
  fi
  transfer_file_s3 "$operation_cmd" "$s3_path" "$target_s3_path" "$recursive"
elif [[ "$operation_type" == 'presign' ]]; then
  presign_url_s3 "$s3_path" "$expires_in"
else
  # just print the path if no operation type set
  echo "s3://$s3_path"
  exit 0
fi
